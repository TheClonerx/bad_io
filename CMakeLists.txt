cmake_minimum_required(VERSION 3.20)
project(event_loop)

include(${CMAKE_BINARY_DIR}/conan_paths.cmake OPTIONAL)

set(WITH_URING_DEFAULT OFF)
set(WITH_EPOLL_DEFAULT OFF)
set(WITH_POLL_DEFAULT ON)
set(WITH_SELECT_DEFAULT ON)
set(WITH_IOCP_DEFAULT OFF)

if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(WITH_EPOLL_DEFAULT ON)
    if (${CMAKE_SYSTEM_VERSION} VERSION_GREATER_EQUAL "3.10")
        set(WITH_URING_DEFAULT ON)
    endif()
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
    set(WITH_IOCP_DEFAULT ON)
endif()

option(WITH_URING "Enable io_uring" ${WITH_URING_DEFAULT})
option(WITH_EPOLL "Enable epoll" ${WITH_EPOLL_DEFAULT})
option(WITH_POLL "Enable poll" ${WITH_POLL_DEFAULT})
option(WITH_SELECT "Enable select" ${WITH_SELECT_DEFAULT})
option(WITH_IOCP "Enable IO Completion Ports" ${WITH_IOCP_DEFAULT})

if (WITH_URING)
    find_package(liburing REQUIRED)
endif()

find_package(concurrentqueue REQUIRED)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

add_library(event_loop)
target_sources(event_loop PRIVATE src/execution_context.cpp)
target_include_directories(event_loop PUBLIC include)
target_link_libraries(event_loop PUBLIC concurrentqueue::concurrentqueue)

if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    if (WITH_URING)
        target_link_libraries(event_loop PUBLIC liburing::liburing)
        target_sources(event_loop PRIVATE src/ioring_service.cpp)
    endif()
    if (WITH_EPOLL)
        target_sources(event_loop PRIVATE src/epoll_service.cpp)
    endif()
endif()

add_executable(main)
target_link_libraries(main PRIVATE event_loop)
target_sources(main PRIVATE src/main.cpp)

find_package(Doxygen)
if (DOXYGEN_FOUND)
    set(DOXYGEN_ENABLE_PREPROCESSING YES)
    set(DOXYGEN_PREDEFINED DOXYGEN_INVOKED)
    set(DOXYGEN_MACRO_EXPANSION YES)
    doxygen_add_docs(docs ${PROJECT_SOURCE_DIR})
endif()